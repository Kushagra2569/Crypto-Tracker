{"version":3,"sources":["components/TopBar.js","components/Dataview.js","components/Chart.js","components/MiddleContent.js","components/SearchListData.js","components/TopHeader.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","props","className","onClick","changeCoin","src","alt","Dataview","id","header","value","Chart","DataFormater","number","parseFloat","toFixed","toString","PrevDay","coinProp","price","priceChange24h","dataMin","low24h","dataMax","high24h","data","name","Price","LineChart","width","height","Line","type","dataKey","stroke","XAxis","YAxis","domain","tickFormatter","Tooltip","formatter","Legend","MiddleContent","selCoin","toUpperCase","slice","marketCap","marketCapRank","priceChange24hper","SelectCoin","coin","onMouseDown","SearchListData","coinsSuggestion","map","TopHeader","useState","text","setText","coinsList","setCoinsList","coinsSug","setCoinsSug","useEffect","fetch","then","response","json","autoCompleteCounter","newArray","forEach","push","symbol","populateCoinsSug","startsWith","coinsAutocomplete","onChange","e","target","onFocus","setOpen","onBlur","open","Main","getData","newCoin","newArr","market_data","current_price","inr","market_cap","market_cap_rank","high_24h","low_24h","price_change_24h","price_change_percentage_24h","setCoinProp","console","log","changeSelCoin","coinName","setselCoin","timer","setInterval","clearInterval","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcd8bfc8.chunk.js","sourcesContent":["import React from 'react'\n\nfunction TopBar(props) {\n    return (\n        <div className='topBar'>\n            <button onClick = {function () {\n                props.changeCoin('bitcoin');\n            }}><img className='coinImg' src='https://icons.iconarchive.com/icons/cjdowner/cryptocurrency/48/Bitcoin-icon.png' alt='bitcoin'></img></button>\n            <button onClick = {function () {\n                props.changeCoin('ethereum');\n            }}><img className='coinImg' src='https://icons.iconarchive.com/icons/cjdowner/cryptocurrency/48/Ethereum-icon.png' alt='ethereum'></img></button>\n            <button onClick = {function () {\n                props.changeCoin('binancecoin');\n            }}><img className='coinImg' src='https://icons.iconarchive.com/icons/cjdowner/cryptocurrency/48/Binance-Coin-icon.png' alt='binaceCoin'></img></button>\n            <button onClick = {function () {\n                props.changeCoin('cardano');\n            }}><img className='coinImg' src='https://icons.iconarchive.com/icons/cjdowner/cryptocurrency/48/Cardano-icon.png' alt='cardano'></img></button>\n            <button onClick = {function () {\n                props.changeCoin('dogecoin');\n            }}><img className='coinImg' src='https://icons.iconarchive.com/icons/cjdowner/cryptocurrency/48/Dogecoin-icon.png' alt='dogeCoin'></img></button>\n            <button onClick = {function () {\n                props.changeCoin('vechain');\n            }}><img className='coinImg' src='https://icons.iconarchive.com/icons/cjdowner/cryptocurrency/48/VeChain-icon.png' alt='VeChain'></img></button>\n            <button onClick = {function () {\n                props.changeCoin('terra-luna');\n            }}><img className='coinImg' src='https://cdn.coinranking.com/F-PJdF8Um/LUNA.svg?size=48x48' alt='Luna'></img></button>\n        </div>\n    )\n}\n\nexport default TopBar","import React from 'react'\n\nfunction Dataview(props) {\n    return (\n        <div className = \"dataView\">\n            <p id = \"header\">{props.header}</p>\n            <p id = \"value\">{props.value}</p>\n        </div>\n    )\n}\n\nexport default Dataview\n","import React from 'react'\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend } from 'recharts';\n\nfunction Chart(props) {\n    \n    const DataFormater = (number) => {\n        number = (parseFloat(number).toFixed(2));\n        if(number > 1000000000){\n          return ((parseFloat((number)/1000000000)).toFixed(2)).toString() + 'B';\n        }else if(number > 1000000){\n          return (parseFloat((number/1000000)).toFixed(2)).toString() + 'M';\n        }else if(number > 1000){\n          return (parseFloat((number/1000)).toFixed(2)).toString() + 'K';\n        }else{\n          return (parseFloat(number).toFixed(2));\n        }\n      }\n    \n    const PrevDay = (props.coinProp[0].price + props.coinProp[0].priceChange24h);\n    const dataMin = ((PrevDay > props.coinProp[0].low24h)?props.coinProp[0].low24h:PrevDay);\n    const dataMax = ((PrevDay < props.coinProp[0].high24h)?props.coinProp[0].high24h:PrevDay);\n    \n    const data = [{name: 'Previous Day', Price: PrevDay},{name: '24 Hour High', Price: props.coinProp[0].high24h},{name: '24 Hour Low', Price: props.coinProp[0].low24h},{name: 'Current Price', Price: props.coinProp[0].price}];\n\n    return (\n        <div className=\"chart\">\n            <LineChart width={600} height={300} data={data}>\n                <Line type=\"monotone\" dataKey=\"Price\" stroke=\"#d3bb9c\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis domain={[(dataMin - (0.02*dataMin)),(dataMax + (0.02*dataMax))]} tickFormatter={DataFormater}/>\n                <Tooltip formatter={DataFormater}/>\n                <Legend />\n            </LineChart>\n        </div>\n    )\n}\n\nexport default Chart\n","import React from \"react\";\nimport Dataview from \"./Dataview\";\nimport Chart from \"./Chart\"\n\nfunction MiddleContent(props) {\n    function getCoinName () {\n        const coinName = props.selCoin[0].toUpperCase() + props.selCoin.slice(1);\n        return coinName;\n    }\n  return (\n    <div className=\"middleContent\">\n      <p id=\"middleContentHeader\">{getCoinName()}</p>\n      <div className=\"middleContentWrapper\">\n        <Dataview header={\"Market Cap\"} value={props.coinProp[0].marketCap} />\n        <Dataview header={\"Market Cap Rank\"} value={props.coinProp[0].marketCapRank} />\n        <Dataview header={\"Current Price\"} value={props.coinProp[0].price} />\n        <Dataview header={\"24 Hour High\"} value={props.coinProp[0].high24h} />\n        <Dataview header={\"24 Hour Low\"} value={props.coinProp[0].low24h} />\n      </div>\n      <div className=\"middleContentBottom\">\n          <div className=\"middleContentBottomLeft\">\n            <Dataview header={\"Price Change 24 Hours\"} value={props.coinProp[0].priceChange24h} />\n            <Dataview header={\"Price Change 24 Hours %\"} value={props.coinProp[0].priceChange24hper} />\n          </div>\n          <div className=\"middleContentBottomRight\">\n              <Chart coinProp={props.coinProp}/>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MiddleContent;\n","import React, {useState, useEffect} from 'react'\n\nfunction SearchListData(props) {\n\n    return (\n        <div className='searchListDataView'>\n            {props.coinsSuggestion.map(coin => (\n                <button id=\"SelectCoinButton\"><SelectCoin changeCoin={props.changeCoin} coin={coin}/></button>\n            ))}\n        </div>\n    )\n}\n\n\nfunction SelectCoin(props) {\n    if(props.coin) {\n        return (\n            <div className='SelectCoinDiv' onMouseDown={() => {\n                props.changeCoin(props.coin.name);\n            }}>\n                {props.coin.name}\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className='SelectCoinDiv'>\n                <p>Fetching Coin Details</p>\n            </div>\n        )\n    }\n}\n\n\nexport default SearchListData","import React, {useState, useEffect} from 'react'\nimport SearchListData from './SearchListData'\n\nfunction TopHeader(props) {\n    const [text, setText] = useState('');\n    const [coinsList, setCoinsList] = useState([]);\n    const [coinsSug, setCoinsSug] = useState([])\n\n    function getAutoCompleteData() {\n        let url =\n        \"https://api.coingecko.com/api/v3/coins/list?include_platform=false\";\n        fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n            setCoinsList([...data]);\n            setCoinsSug([]);\n        });\n    }\n    function coinsAutocomplete() {\n        let autoCompleteCounter = 0;\n        let newArray = [];\n        if(coinsList !== []) {\n            coinsList.forEach(coin => {\n                if(autoCompleteCounter < 10) {\n                    let id = coin.id;\n                    if(id.startsWith(text)) {\n                        newArray.push({name:id,symbol:coin.symbol});\n                        autoCompleteCounter += 1;\n                    }\n                }\n            });\n        }\n        setCoinsSug(newArray);\n    }\n    function populateCoinsSug() {\n        let autoCompleteCounter = 0;\n        let newArray = [];\n        if(coinsList !== []) {\n            coinsList.forEach(coin => {\n                if(autoCompleteCounter <= 5) {\n                    newArray.push({name:coin.id,symbol:coin.symbol});\n                    autoCompleteCounter += 1;\n                }\n            });\n        }\n        setCoinsSug(newArray);\n    }\n    useEffect(() => {\n        getAutoCompleteData();\n    }, [])\n\n    useEffect(() => {\n        populateCoinsSug();\n    },[coinsList])\n\n    useEffect(() => {\n        coinsAutocomplete();\n    },[text])\n\n    return (\n        <div>\n            <div className=\"TopHeader\">\n                <div className=\"searchBar\">\n                    <input type='text' id='searchInput' value={text} \n                    onChange={e => {setText(e.target.value);\n                    }} \n                    onFocus={ () => {props.setOpen(true)}} onBlur={ (e) => {\n                        props.setOpen(false);\n                        setText('');\n                        }} />\n                </div>\n                <p></p>{/*TODO: Add the currency changer*/}\n            </div>\n            {props.open && <SearchListData changeCoin={props.changeCoin} coinsSuggestion={coinsSug}/>}\n        </div>\n    )\n}\n\nexport default TopHeader","import React, { useState, useEffect } from \"react\";\nimport TopBar from \"./TopBar\";\nimport MiddleContent from \"./MiddleContent\";\nimport TopHeader from './TopHeader'\n\nfunction Main() {\n  function getData(newCoin) {\n    let url =\n    \"https://api.coingecko.com/api/v3/coins/\" + newCoin + \"?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=false\";\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n          let newArr = [...coinProp];\n          newArr[0].price = data.market_data.current_price.inr;\n          newArr[0].marketCap = data.market_data.market_cap.inr;\n          newArr[0].marketCapRank = data.market_data.market_cap_rank;\n          newArr[0].high24h = data.market_data.high_24h.inr;\n          newArr[0].low24h = data.market_data.low_24h.inr;\n          newArr[0].priceChange24h = data.market_data.price_change_24h;\n          newArr[0].priceChange24hper = data.market_data.price_change_percentage_24h;\n          setCoinProp(newArr);\n          console.log(coinProp[0].price);\n      });\n  }\n\n  function changeSelCoin(coinName) {\n    setselCoin(coinName);\n    getData(coinName);\n  }\n  const [selCoin, setselCoin] = useState(\"ethereum\");\n  const [coinProp, setCoinProp] = useState([{price:\"000\", marketCap:\"000\", marketCapRank:\"0\", high24h:\"000\", low24h:\"000\", priceChange24h:\"00\", priceChange24hper:\"0%\"}]);\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n        getData(selCoin);\n    }, 115000);\n    \n    return () => clearInterval(timer);\n  });\n\n  return (\n      <div >\n        <div className=\"topDiv\">\n            <TopHeader changeCoin={changeSelCoin} open={open} setOpen={setOpen}/>\n        </div>\n        <div className=\"maindiv\">\n            <TopBar changeCoin={changeSelCoin} />\n            <MiddleContent coinProp={coinProp} selCoin={selCoin}/>\n        </div>\n      </div>\n  );\n}\n\nexport default Main;\n","import './App.css';\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}